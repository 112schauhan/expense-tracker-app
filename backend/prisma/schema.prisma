// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(EMPLOYEE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  expenses         Expense[]
  
  @@map("users")
}

model Expense {
  id          String        @id @default(uuid())
  amount      Float
  category    ExpenseCategory
  description String?
  date        DateTime
  status      ExpenseStatus @default(PENDING)
  receiptUrl  String?
  rejectionReason String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  
  // Relations
  userId      String
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("expenses")
  @@index([userId])
  @@index([status])
  @@index([category])
  @@index([date])
}

enum Role {
  EMPLOYEE
  ADMIN
}

enum ExpenseStatus {
  PENDING
  APPROVED
  REJECTED
}

enum ExpenseCategory {
  FOOD
  TRANSPORT
  ACCOMMODATION
  OFFICE_SUPPLIES
  SOFTWARE
  TRAINING
  MARKETING
  TRAVEL
  ENTERTAINMENT
  UTILITIES
  OTHER
}